# "default:" roles apply to every user in the system.
default:
  models:
    TrainingQuestion: read
    TrainingContent: read
    TrainingProgram: read
    Facility: read
    Team: read
    Membership:
      - read
      - search
    Platform::Application: read
    Webhooks::Outgoing::Endpoint: manage
    Webhooks::Outgoing::Event: read
    Webhooks::Outgoing::Delivery: read
    Webhooks::Outgoing::DeliveryAttempt: read
    Invitation:
      - read
      - create
      - destroy
    # Add any models all users should be able to read

# Under each role (like "employee", "vendor", etc.), "manageable_roles" lists
# what roles they can assign to others.
# The "models" define which actions (read, manage, update) the role can perform on each model.

# For "employee":
# - "manageable_roles: - employee" means employees can manage other employees' roles.
# - "models: ... manage ... read ... update" means employees can create, update,
#   or otherwise manage listed models if they have the correct permissions.

employee:
  manageable_roles:
    - employee
  models:
    Scaffolding::CompletelyConcrete::TangibleThing: manage
    Scaffolding::AbsolutelyAbstract::CreativeConcept:
      - read
      - update
    # Add models that employees should have access to
    TrainingProgram: read

vendor:
  manageable_roles:
    - vendor
  models:
    Scaffolding::CompletelyConcrete::TangibleThing: manage
    Scaffolding::AbsolutelyAbstract::CreativeConcept:
      - read
      - update
    # Add models that vendors should have access to
    TrainingProgram: read

editor:
  models:
    Scaffolding::CompletelyConcrete::TangibleThing: manage
    Scaffolding::AbsolutelyAbstract::CreativeConcept:
      - read
      - update

coordinator:
  models:
    Scaffolding::CompletelyConcrete::TangibleThing: manage
    Scaffolding::AbsolutelyAbstract::CreativeConcept:
      - read
      - update

# "includes:" merges permissions from other roles into this one.
# In "admin:", it includes "editor", "vendor", and "employee".
# Essentially, "admin" inherits all privileges from those roles.

admin:
  includes:
    - editor
    - vendor
    - employee
  manageable_roles:
    - admin
    - editor
    - vendor
    - employee
  models:
    TrainingQuestion: manage
    TrainingContent: manage
    TrainingProgram: manage
    Facility: manage
    Team: manage
    Membership: manage
    Scaffolding::AbsolutelyAbstract::CreativeConcept: manage

# Bullet Train processes this file to build the authorization rules.
# Whenever the application checks if a user can perform an action,
# Bullet Train consults the appropriate role(s) defined here.
# This happens at runtime when evaluating permissions in controllers, views, or policies.
